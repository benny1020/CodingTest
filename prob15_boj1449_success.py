# boj 1449 수리공 항승

"""
문제
항승이는 품질이 심각하게 나쁜 수도 파이프 회사의 수리공이다.
항승이는 세준 지하철 공사에서 물이 샌다는 소식을 듣고 수리를 하러 갔다.

파이프에서 물이 새는 곳은 신기하게도 가장 왼쪽에서 정수만큼 떨어진 거리만 물이 샌다.

항승이는 길이가 L인 테이프를 무한개 가지고 있다.

항승이는 테이프를 이용해서 물을 막으려고 한다. 항승이는 항상 물을 막을 때,
적어도 그 위치의 좌우 0.5만큼 간격을 줘야 물이 다시는 안 샌다고 생각한다.

물이 새는 곳의 위치와, 항승이가 가지고 있는 테이프의 길이 L이 주어졌을 때,
항승이가 필요한 테이프의 최소 개수를 구하는 프로그램을 작성하시오. 테이프를 자를 수 없고, 테이프를 겹쳐서 붙이는 것도 가능하다.

입력
첫째 줄에 물이 새는 곳의 개수 N과 테이프의 길이 L이 주어진다. 둘째 줄에는 물이 새는 곳의 위치가 주어진다.
N과 L은 1,000보다 작거나 같은 자연수이고, 물이 새는 곳의 위치는 1,000보다 작거나 같은 자연수이다.

출력
첫째 줄에 항승이가 필요한 테이프의 개수를 출력한다.

"""

# 풀이
# 물이 새는 곳 위치의 범위가 1~1000
# 좌우 0.5만큼 간격을 줘야 물 안샘
# -> 1인경우 0.5, 1.5 이렇게 막아줘야함
# 따라서 1001개짜리 배열 생성
# 인덱스가 0인경우-> 0.5라고 생각, 1->1.5, ... 1000->1000.5
# 따라서 물 새는 곳이 1이면 일단 arr[0], arr[1] = 1로 바꿔줌
# 그러면 0.5, 1.5이 테이프로 막아야한다는 뜻
# 이런식으로 물새는곳 전부 표기한후
# 0번째 인덱스부터 물새는곳(arr[i]==1) 확인하고 물 새는 경우에는
# 테이프 길이만큼 for문 돌려서 arr[i] = 0으로 해줌 -> 물새는곳 막아다는뜻
# 끝



num, tape_len = map(int,input().split())
tape_num=0
arr = [0 for i in range(1001)]
tmp = list(map(int,input().split()))
#-------
#물새는곳 표시
for t in tmp:
    arr[t] = 1
    arr[t-1] = 1
#-------------

#-------
# 물새는곳 하나하나 찾으면서 테이프 길이만큼 막음
for i in range(1001):
    if arr[i] == 1:
        tape_num+=1
        for j in range(tape_len+1):
            if(i+j == 1001):
                break
            arr[i+j]=0
        i = i+tape_len-1 #막은 부분은 확인할 필요 없으므로 뛰어넘어주면 시간단축
#-------

print(tape_num)
